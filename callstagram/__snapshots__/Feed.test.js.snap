// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders loading state 1`] = `
<View
  style={Object {}}
>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Object {
        "fontSize": 24,
        "textAlign": "center",
      }
    }
  >
    Loading..
  </Text>
</View>
`;

exports[`renders with delivered images 1`] = `
<RCTScrollView
  data={
    Array [
      Object {
        "image": "http://imageURL",
        "key": "asdf",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={3}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={2}
  onContentSizeChange={[Function]}
  onEndReached={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  style={
    Object {
      "flex": 1,
    }
  }
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            undefined,
          ]
        }
      >
        <View
          style={Object {}}
        >
          <Image
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hitSlop={undefined}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            source={
              Object {
                "uri": "http://imageURL",
              }
            }
            style={
              Object {
                "aspectRatio": 1,
                "width": NaN,
              }
            }
            testID={undefined}
          />
          <View
            accessibilityComponentType="button"
            accessibilityLabel={undefined}
            accessibilityTraits={
              Array [
                "button",
              ]
            }
            accessible={true}
            collapsable={undefined}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                disabled={undefined}
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {
                      "color": "#007AFF",
                      "fontSize": 18,
                      "padding": 8,
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Like Me
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
